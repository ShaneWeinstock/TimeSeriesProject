set.seed(1701)
tsensTrain2 = tail(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsensTrain2[,'attritionRate'],reps=20
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsensTrain2)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsensTrain2)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ensFit
plot(ensFit)
ensFit
#prediction from ARMA
ensARMATestPred = tswge::fore.aruma.wge(XTrain$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =TestSize,lastn = F)$f
#prediction from VAR
ensVARTest= VAR(XTrain,p=6,type='trend',season=3,exogen=NULL)
ensVARTestPred =  predict(ensVAR,n.ahead=nrow(XTest))$fcst$attritionRate[,1]
#prediction from Ensemble
ensTest=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA = c(ensARMAPred, ensARMATestPred)
,VAR =  c(ensVARPred, ensVARTestPred)))
#ARMA =  ts(c(ensARMAPred, ensARMATestPred),start=min(time(tsensTrain2)),frequency=12)
#,VAR =  ts(c(ensVARPred, ensVARTestPred),start=min(time(tsensTrain2)),frequency=12)))
plot(XTest$attritionRate,type='l',ylim =c(0,0.011))
lines(seq(1,TestSize),ensTest$mean,col='red')
ensASE = mean((tsTest[,'attritionRate'] - ensTest$mean)^2)
ensASE
format(round(armaASE,8),scientific=FALSE)
format(round(varASE,8),scientific=FALSE)
format(round(nnASE,8),scientific=FALSE)
format(round(nnASE,8),scientific=FALSE)
format(round(nnASE,8),scientific=FALSE)
format(round(ensASE,8),scientific=FALSE)
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
horizon = 12
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVAR,n.ahead=horizon)$fcst$attritionRate[,1]
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
ensFuture
ensFuture$fitted
ensFuture$residuals
ensFuture$fitted
ensFuture$method
ensFuture$mean
showLast = 50
plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
plot(ensFuture)
nnfor:::plot.forecast.net(ensFuture)
ensFuture$residuals
ensFuture$mean
ensFuture$all.mean
#plot(ensFuture)
ts.plot(ensFuture$all.mean, ensFuture$mean, col = c(rep("grey",
reps), "blue"), lwd = c(rep(1, reps), 2), main = paste("Forecasts from",
toupper(method)))
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(ensFuture$all.mean, ensFuture$mean, col = c(rep("grey",
reps), "blue"), lwd = c(rep(1, reps), 2), main = paste("Forecasts from",
toupper(method)))
ts.plot(ensFuture$all.mean, ensFuture$mean, col = c(rep("grey",
reps), "blue"), lwd = c(rep(1, reps), 2))
ts.plot(ensFuture$all.mean, ensFuture$mean, col = c(rep("grey",
reps), "blue"), lwd = c(rep(1, reps), 2))
showLast = 50
#plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
ts.plot(ensFuture$all.mean, ensFuture$mean, col = c(rep("grey",
reps), "blue"), lwd = c(rep(1, reps), 2))
lines(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
plot(ensFuture$all.mean, ensFuture$mean, col = c(rep("grey",reps), "blue"), lwd = c(rep(1, reps), 2))
ts.plot(ensFuture$all.mean, ensFuture$mean, col = c(rep("grey",reps), "blue"), lwd = c(rep(1, reps), 2))
ts.plot(tsTest, ensFuture$all.mean, ensFuture$mean, col = c(rep("grey",reps), "blue"), lwd = c(rep(1, reps), 2))
tsTest
ts.plot(tsTest[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
tsTest[,'attritionRate']
ensFuture$all.mean
ensVAR
ensFit
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
c(ensARMAPred, ensARMAFuturePred)
X$attritionRate
ensVAR
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVARFuture,n.ahead=horizon)$fcst$attritionRate[,1]
ensFit = nnfor::mlp(y=tsAll[,'attritionRate'],reps=20
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsAll)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsAll)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
#ensamble model
tsensTrain2 = c(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsAll[,'attritionRate'],reps=20
,xreg = data.frame(ARMA = ts(ensARMAFuturePred,start=min(time(tsAll)),frequency=12)
,VAR = ts(ensVARFuturePred,start=min(time(tsAll)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ts(ensARMAFuturePred,start=min(time(tsAll)),frequency=12)
ts(ensVARFuturePred,start=min(time(tsAll)),frequency=12) )
,VAR = ts(ensVARFuturePred,start=min(time(tsAll)),frequency=12)
VAR = ts(ensVARFuturePred,start=min(time(tsAll)),frequency=12)
ts(ensVARFuturePred,start=min(time(tsAll)),frequency=12)
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
degf = length(predictions)-1
# find our t stat
tstat = qt(.95, degf)
# 90% CI without SD
# alpha = .10
# remember degrees of freedom is n-1
predictions=ensFuture$mean
degf = length(predictions)-1
# find our t stat
tstat = qt(.95, degf)
SE <- tstat*sd(predictions)/sqrt(length(predictions))
S
SE
upperLimitPoints = mean(predictions) + SE
lowerLimitPoints = mean(predictions) - SE
upperLimitPoints
upperLimitPoints
## ARMA Training
ensARMA= tswge::fore.aruma.wge(ensTrain$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead = nrow(ensTrain2),lastn = F)
ensARMAPred  = ensARMA$f
## VAR Training
ensVAR= VAR(ensTrain,p=6,type='trend',season=3,exogen=NULL)
ensVARPred =  predict(ensVAR,n.ahead=nrow(ensTrain2))$fcst$attritionRate[,1]
## Plotting Predictions
plot(1:nrow(ensTrain2),ensTrain2$attritionRate, type='l',lwd=2)
lines(1:nrow(ensTrain2),ensARMAPred,col='red')
lines(1:nrow(ensTrain2),ensVARPred,col='blue')
## Ensemble Training
set.seed(1701)
tsensTrain2 = tail(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsensTrain2[,'attritionRate'],reps=100
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsensTrain2)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsensTrain2)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ensFit
plot(ensFit)
#prediction from ARMA
ensARMATestPred = tswge::fore.aruma.wge(XTrain$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =TestSize,lastn = F)$f
#prediction from VAR
ensVARTest= VAR(XTrain,p=6,type='trend',season=3,exogen=NULL)
ensVARTestPred =  predict(ensVAR,n.ahead=nrow(XTest))$fcst$attritionRate[,1]
#prediction from Ensemble
ensTest=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA = c(ensARMAPred, ensARMATestPred)
,VAR =  c(ensVARPred, ensVARTestPred)))
#ARMA =  ts(c(ensARMAPred, ensARMATestPred),start=min(time(tsensTrain2)),frequency=12)
#,VAR =  ts(c(ensVARPred, ensVARTestPred),start=min(time(tsensTrain2)),frequency=12)))
plot(XTest$attritionRate,type='l',ylim =c(0,0.011))
lines(seq(1,TestSize),ensTest$mean,col='red')
ensASE = mean((tsTest[,'attritionRate'] - ensTest$mean)^2)
ensASE
horizon = 12
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVARFuture,n.ahead=horizon)$fcst$attritionRate[,1]
#ensamble model
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
#showLast = 50
#plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
#lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
#lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
## Ensemble Training
set.seed(1701)
tsensTrain2 = tail(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsensTrain2[,'attritionRate'],reps=50
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsensTrain2)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsensTrain2)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ensFit
plot(ensFit)
#prediction from ARMA
ensARMATestPred = tswge::fore.aruma.wge(XTrain$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =TestSize,lastn = F)$f
#prediction from VAR
ensVARTest= VAR(XTrain,p=6,type='trend',season=3,exogen=NULL)
ensVARTestPred =  predict(ensVAR,n.ahead=nrow(XTest))$fcst$attritionRate[,1]
#prediction from Ensemble
ensTest=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA = c(ensARMAPred, ensARMATestPred)
,VAR =  c(ensVARPred, ensVARTestPred)))
#ARMA =  ts(c(ensARMAPred, ensARMATestPred),start=min(time(tsensTrain2)),frequency=12)
#,VAR =  ts(c(ensVARPred, ensVARTestPred),start=min(time(tsensTrain2)),frequency=12)))
plot(XTest$attritionRate,type='l',ylim =c(0,0.011))
lines(seq(1,TestSize),ensTest$mean,col='red')
ensASE = mean((tsTest[,'attritionRate'] - ensTest$mean)^2)
horizon = 12
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVARFuture,n.ahead=horizon)$fcst$attritionRate[,1]
#ensamble model
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
#showLast = 50
#plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
#lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
#lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
vars::VARselect(XTrain, lag.max = 6, type = 'trend',season = 3, exogen = NULL)
XTrain
vars::VARselect(XTrain, lag.max = 10, type = 'both',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 6, type = 'both',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 7, type = 'both',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 8, type = 'both',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 10, type = 'both',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 2, type = 'both',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 1:2, type = 'both',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 6, type = 'const',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 8, type = 'none',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 8, type = 'trend',season = 3, exogen = NULL)
XTrain
vars::VARselect(XTrain, lag.max = 10, type = 'trend',season = 3, exogen = NULL)
varFit=VAR(XTrain,p=8,type='trend',season=3,exogen=NULL)
varFit=VAR(XTrain,p=10,type='trend',season=3,exogen=NULL)
summary(varFit$varresult$attritionRate)
AIC(varFit)
varPred = predict(varFit,n.ahead=TestSize)$fcst$attritionRate[,1]
varDataPred = cbind(dataTot,pred=NA)
varDataPred[(nrow(varDataPred)-TestSize+1):nrow(varDataPred),]$pred = varPred
ggplot(data=varDataPred,aes(x=timeID,y=attritionRate)) +
geom_line() +
geom_line(aes(y=pred),color='red')
varASE = ase(varPred,tail(dataTot,TestSize)$attritionRate)
varASE
tsTrain = ts(XTrain,start=c(2010,1),frequency = 12)
tsTest = ts(XTest,start=c(2018,10),frequency = 12)
tsAll =   ts(rbind(XTrain,XTest),start=c(2010,1),frequency = 12)
set.seed(1701)
library(nnfor)
nnFit = nnfor::mlp(y=tsTrain[,'attritionRate'],reps=20
,xreg = data.frame(tsAll[,colnames(tsAll) != 'attritionRate'])
,difforder = c(1,3),hd.auto.type = 'cv',hd=NULL,lags=1:6)
#https://www.analyticsvidhya.com/blog/2018/06/comprehensive-guide-for-ensemble-models/
ensTrain = head(XTrain,nrow(XTrain)*2/3)
ensTrain2  = tail(XTrain,nrow(XTrain)*1/3)
## ARMA Training
ensARMA= tswge::fore.aruma.wge(ensTrain$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead = nrow(ensTrain2),lastn = F)
ensARMAPred  = ensARMA$f
## VAR Training
ensVAR= VAR(ensTrain,p=6,type='trend',season=3,exogen=NULL)
ensVARPred =  predict(ensVAR,n.ahead=nrow(ensTrain2))$fcst$attritionRate[,1]
## Plotting Predictions
plot(1:nrow(ensTrain2),ensTrain2$attritionRate, type='l',lwd=2)
lines(1:nrow(ensTrain2),ensARMAPred,col='red')
lines(1:nrow(ensTrain2),ensVARPred,col='blue')
## Ensemble Training
set.seed(1701)
tsensTrain2 = tail(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsensTrain2[,'attritionRate'],reps=50
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsensTrain2)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsensTrain2)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ensFit
plot(ensFit)
#prediction from ARMA
ensARMATestPred = tswge::fore.aruma.wge(XTrain$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =TestSize,lastn = F)$f
#prediction from VAR
ensVARTest= VAR(XTrain,p=6,type='trend',season=3,exogen=NULL)
ensVARTestPred =  predict(ensVAR,n.ahead=nrow(XTest))$fcst$attritionRate[,1]
#prediction from Ensemble
ensTest=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA = c(ensARMAPred, ensARMATestPred)
,VAR =  c(ensVARPred, ensVARTestPred)))
#ARMA =  ts(c(ensARMAPred, ensARMATestPred),start=min(time(tsensTrain2)),frequency=12)
#,VAR =  ts(c(ensVARPred, ensVARTestPred),start=min(time(tsensTrain2)),frequency=12)))
plot(XTest$attritionRate,type='l',ylim =c(0,0.011))
lines(seq(1,TestSize),ensTest$mean,col='red')
horizon = 12
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVARFuture,n.ahead=horizon)$fcst$attritionRate[,1]
#ensamble model
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
#showLast = 50
#plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
#lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
#lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
## Ensemble Training
set.seed(1701)
tsensTrain2 = tail(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsensTrain2[,'attritionRate'],reps=100
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsensTrain2)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsensTrain2)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ensFit
plot(ensFit)
horizon = 12
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVARFuture,n.ahead=horizon)$fcst$attritionRate[,1]
#ensamble model
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
#showLast = 50
#plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
#lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
#lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
## Ensemble Training
set.seed(33)
tsensTrain2 = tail(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsensTrain2[,'attritionRate'],reps=100
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsensTrain2)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsensTrain2)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ensFit
plot(ensFit)
horizon = 12
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVARFuture,n.ahead=horizon)$fcst$attritionRate[,1]
#ensamble model
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
#showLast = 50
#plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
#lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
#lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
## Ensemble Training
set.seed(33)
tsensTrain2 = tail(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsensTrain2[,'attritionRate'],reps=70
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsensTrain2)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsensTrain2)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ensFit
plot(ensFit)
horizon = 12
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVARFuture,n.ahead=horizon)$fcst$attritionRate[,1]
#ensamble model
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
#showLast = 50
#plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
#lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
#lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
## Ensemble Training
set.seed(33)
tsensTrain2 = tail(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsensTrain2[,'attritionRate'],reps=50
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsensTrain2)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsensTrain2)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ensFit
plot(ensFit)
horizon = 12
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVARFuture,n.ahead=horizon)$fcst$attritionRate[,1]
#ensamble model
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
#showLast = 50
#plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
#lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
#lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
## Ensemble Training
set.seed(1701)
tsensTrain2 = tail(tsTrain,nrow(ensTrain2))
ensFit = nnfor::mlp(y=tsensTrain2[,'attritionRate'],reps=40
,xreg = data.frame(ARMA = ts(ensARMAPred,start=min(time(tsensTrain2)),frequency=12)
,VAR = ts(ensVARPred,start=min(time(tsensTrain2)),frequency=12) )
,difforder = NULL,hd.auto.type = 'cv',hd=NULL,lags=NULL)
ensFit
plot(ensFit)
horizon = 12
#prediction from ARMA
ensARMAFuturePred = tswge::fore.aruma.wge(X$attritionRate
,phi = es$phi,theta = es$theta,s=s
,n.ahead =horizon,lastn = F,plot=F)$f
#prediction from VAR
ensVARFuture = VAR(X,p=6,type='trend',season=3,exogen=NULL)
ensVARFuturePred =  predict(ensVARFuture,n.ahead=horizon)$fcst$attritionRate[,1]
#ensamble model
#prediction from Ensemble
ensFuture=forecast(ensFit,h=TestSize,xreg =data.frame(
ARMA =  c(ensARMAPred, ensARMAFuturePred)
,VAR =  c(ensVARPred, ensVARFuturePred))
,level=0.95)
#plot(ensFuture)
reps <- dim(ensFuture$all.mean)[2]
ts.plot(tsTrain[,'attritionRate'], ensFuture$all.mean, ensFuture$mean, col = c('black',rep("grey",reps), "blue"), lwd = c(1,rep(1, reps), 2))
#showLast = 50
#plot(tail(X$attritionRate,showLast),type='l',xlim=c(1,showLast+horizon))
#lines((showLast+1):(horizon + showLast),ensFuture$mean,col='red')
#lines((showLast+1):(horizon + showLast),ensFuture$low,col='red')
ensFuture$mean
vars::VARselect(XTrain, lag.max = 12, type = 'trend',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 13, type = 'trend',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 12, type = 'trend',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 14, type = 'trend',season = 3, exogen = NULL)
vars::VARselect(XTrain, lag.max = 7, type = 'trend',season = 3, exogen = NULL)
varFit=VAR(XTrain,p=6,type='trend',season=3,exogen=NULL)
summary(varFit$varresult$attritionRate)
